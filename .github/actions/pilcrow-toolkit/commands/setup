#!/bin/bash
if [[ "$POST_ENTRYPOINT" == "true" ]]; then
    # Check if anything was written to the output cache directory during the bake command.

    OUTPUT_DIRS=$(find ${CACHE_OUTPUT} -maxdepth 1 -mindepth 1 -type d)
    if [[ -z ${OUTPUT_DIRS} ]]; then
        echo "No output directories found in ${CACHE_OUTPUT}."
        exit 0
    fi
    for dir in "${OUTPUT_DIRS}"; do
        echo "Checking directory: $dir"
        if [[ -d "$dir" ]]; then
            echo "Found directory in cache: $dir"
            ls -la "$dir"
            if [[ -r "${dir}/output.md" ]]; then
                echo "Writing markdown step summary."
                cat "${dir}/output.md" >> "$GITHUB_STEP_SUMMARY"
            else
                if [[ -s "${dir}/errors.txt" ]]; then
                    echo "Writing errors to step summary: $dir"
                    echo "<details><summary>STDERR Output</summary>" >> "$GITHUB_STEP_SUMMARY"
                    echo '```' >> "$GITHUB_STEP_SUMMARY"
                    cat "${dir}/errors.txt" | aha --no-header >> "$GITHUB_STEP_SUMMARY"
                    echo '```' >> "$GITHUB_STEP_SUMMARY"
                    echo "</details>" >> "$GITHUB_STEP_SUMMARY"
                    echo "" >> "$GITHUB_STEP_SUMMARY"
                fi
                if [[ -s "${dir}/output.txt" ]]; then
                    echo "Writing stdout to step summary: $dir"
                    echo "<details><summary>STDOUT Output</summary>" >> "$GITHUB_STEP_SUMMARY"
                    echo '```' >> "$GITHUB_STEP_SUMMARY"
                    cat "${dir}/output.txt" | aha --no-header >> "$GITHUB_STEP_SUMMARY"
                    echo '```' >> "$GITHUB_STEP_SUMMARY"
                    echo "</details>" >> "$GITHUB_STEP_SUMMARY"
                fi

            fi

        fi
    done

fi



VERSION=$(git describe --tags --match "v*")
VERSION_URL=https://github.com/${GITHUB_REPOSITORY}/commits/${GITHUB_SHA}
VERSION_DATE=$(git show -s --format=%cI ${GITHUB_SHA})

REPO=${GITHUB_REPOSITORY,,}
DOCKER_REGISTRY_CACHE=ghcr.io/${REPO}/cache/__service__

echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
echo "version-url=${VERSION_URL}" >> "$GITHUB_OUTPUT"
echo "version-date=${VERSION_DATE}" >> "$GITHUB_OUTPUT"
echo "repository=${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"
echo "docker-registry-cache=${DOCKER_REGISTRY_CACHE}" >> "$GITHUB_OUTPUT"
echo "buildstamp=$(date --iso=ns)" >> "$GITHUB_OUTPUT"
if [ "${TARGET}" == "release" ]; then
    echo "image-template=ghcr.io/${REPO}/__service__" >> "$GITHUB_ENV"
else
    echo "image-template=${DOCKER_REGISTRY_CACHE}" >> "$GITHUB_ENV"
fi
