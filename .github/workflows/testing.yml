name: Testing
on:
  pull_request:
    paths-ignore:
      - "helm/**"
      - ".release-please-manifest.json"
  merge_group:
  push:
    branches:
      - master
      - renovate/*
    paths-ignore:
      - "helm/**"
      - ".release-please-manifest.json"
permissions:
  packages: write
concurrency:
  group: tests-${{ format('{0}-{1}', github.head_ref || github.run_number, github.job) }}
  cancel-in-progress: true

jobs:
  client-unit-test:
    name: "Client / Unit Test"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: ./.github/actions/build-image
        id: build-image
        name: Run Unit Tests
        with:
          target: "web-test-results"

  build-images:
    name: "Build"
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.build-image.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/build-image
        id: build-image
        name: Build Image
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  # backend-unit-test:
  #   name: Backend / Unit Test
  #   needs: [build-images]
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Start Stack
  #       uses: ./.github/actions/start-stack
  #       with:
  #         version: ${{ needs.build-images.outputs.version }}
  #     - run: docker compose exec -T phpfpm ./artisan test
  #       name: Run Unit Test
  #     - run: docker compose down
  #       name: Stop Stack
  # e2e:
  #   name: "E2E Test"
  #   needs: [build-images]
  #   uses: ./.github/workflows/do-test-e2e.yml
  #   secrets: inherit
  #   with:
  #     version: ${{ needs.build-images.outputs.version }}
  lint-php:
    name: PHP Lint
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - name: Install dependencies
        run: composer install
      - name: Check PHP
        run: composer lint
  lint-js:
    name: JS Lint
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: client/yarn.lock
      - name: Install dependencies
        run: yarn
      - name: Check JS
        run: yarn lint
  lint-md:
    name: MD Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn install
      - name: Check MD
        run: yarn lint:md
